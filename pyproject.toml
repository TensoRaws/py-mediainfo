[build-system]
build-backend = "pdm.backend"
requires = ["pdm-backend"]

[project]
authors = [
  {name = "Tohrusky", email = "65994850+Tohrusky@users.noreply.github.com"}
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "License :: OSI Approved :: MIT License"
]
dependencies = []
license = {text = "MIT"}
name = "py-mediainfo"
readme = "README.md"
requires-python = ">=3.8"
version = "0.0.1"

[project.urls]
Homepage = "https://github.com/TensoRaws/py-mediainfo"
Repository = "https://github.com/TensoRaws/py-mediainfo"

[tool.coverage.run]
omit = []

[tool.mypy]
disable_error_code = "attr-defined"
disallow_any_generics = false
ignore_missing_imports = true
strict = true
warn_return_any = false

[tool.pdm.dev-dependencies]
lint = [
  "pre-commit",
  "ruff",
  "mypy"
]
test = [
  "pytest",
  "pytest-cov",
  "requests",
  "tqdm"
]

[tool.pdm.scripts.download_lib]
call = "script.download_lib:download_lib"
help = "Download mediainfo library"

[tool.pdm.scripts.lint]
composite = [
  "pre-commit run --all-files"
]
help = "Check code style against linters"

[tool.pdm.scripts.post_install]
composite = [
  "pre-commit install",
  "download_lib"
]
help = "Install the pre-commit hook"

[tool.pdm.scripts.test]
cmd = "pytest tests --cov=pymediainfo --cov-report=xml --cov-report=html"
help = "Run tests with coverage"

[tool.ruff]
extend-ignore = ["B018", "B019", "PGH003", "B028", "RUF001"]
extend-select = [
  "I",  # isort
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "PGH",  # pygrep-hooks
  "RUF",  # ruff
  "W",  # pycodestyle
  "YTT"  # flake8-2020
]
fixable = ["ALL"]
line-length = 120

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.isort]
combine-as-imports = true
known-first-party = ["pdm"]

[tool.ruff.mccabe]
max-complexity = 10
